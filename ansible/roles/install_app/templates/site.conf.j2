#
# A virtual host using mix of IP-, name-, and port-based configuration
#

server {
#    listen       80;
#    listen [::]:80;
    listen 443 ssl http2;

    # Всё равно на этом сервере других сайтов кроме вордпресса нет
    server_name  _;
    charset utf-8;

    access_log /var/log/nginx/{{ install_app_my_domain_tld }}/access.log;
    error_log /var/log/nginx/{{ install_app_my_domain_tld }}/error.log;

    ###########################
    # Настройки SSL для HTTPS #
    ###########################

    resolver {{ tf_dns_ip }};

    # Указываем пути к RSA-сертификатам
    ssl_certificate /opt/LEscript/certs/{{ install_app_my_domain_tld }}/fullchain.cer;
    ssl_certificate_key /opt/LEscript/certs/{{ install_app_my_domain_tld }}/{{ install_app_my_domain_tld }}.key;

    # Указываем пути к ECC-сертификатам
    ssl_certificate /opt/LEscript/certs/{{ install_app_my_domain_tld }}_ecc/fullchain.cer;
    ssl_certificate_key /opt/LEscript/certs/{{ install_app_my_domain_tld }}_ecc/{{ install_app_my_domain_tld }}.key;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # 2048-битный ключ Диффи-Хеллмана
    ssl_dhparam /etc/pki/tls/certs/dhparam.pem;

    # Указываем виды шифрования (тут секьюрно, но без фанатизма)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;

    # позволяем серверу прикреплять OCSP-ответы, тем самым уменьшая время загрузки страниц у пользователей
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

    ###########################
    # Усложняем жизнь хакерам #
    ###########################

    #Блокируем информацию по версии сервера
    server_tokens off;

    #Запрещаем отображение нашего сайта в фреймах
    add_header X-Frame-Options "SAMEORIGIN" always;

    #Запрещаем дальнейшую загрузку страницы, если обнаружили Cross-Site Scripting атаку
    add_header X-XSS-Protection "1";

    # Трекинг с нашего сайта дальше нашего сайта не уйдёт
    add_header Referrer-Policy "strict-origin";

    #Чтобы браузеры не умничали сверх необходимого и не пытались найти, скажем, архив внутри картинки
    # Есть жёстко заданный MIME-тип - ему и следуем.
    add_header X-Content-Type-Options nosniff;

    ##########
    # Прочее #
    ##########

    # Задаем максимальный размер вложений в письма в 250 Мб (очень большие книжки попадаются)
    client_max_body_size 250M;

    ####################
    # Пути к каталогам #
    ####################

    # Блокируем доступ ко всем git-файлам и каталогам
    location ~ /\.git {
        deny all;
    }

    location / {
        root   /var/www/{{ install_app_my_domain_tld }}/wordpress;

        index  index.php index.html index.htm;
    }

    location = /favicon.ico {
                log_not_found off;
                access_log off;
    }

    location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
    }

    location = /humans.txt {
                allow all;
                log_not_found off;
                access_log off;
    }

    location = /ads.txt {
                allow all;
                log_not_found off;
                access_log off;
    }

    error_page  404              /404.html;
    location = /404.html {
        root   /usr/share/nginx/html;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    
    

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
        root           /var/www/{{ install_app_my_domain_tld }}/wordpress;

        try_files $uri =404;
        fastcgi_pass   unix:/run/php-fpm/www.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }

}
