---
# Ставим PHP
- name: "Install PHP"
  ansible.builtin.include_role:
    name: install_php
  vars:
    install_php_ver: "{{ install_app_php_ver }}"
# Вырубаем проверку SElinux для httpd_t
# Иначе не хочет WordPress с базами данных
# общаться. И я не пойму - почему.
# Чёртовы параноики!
- name: "Disable SElinux for nginx"
  become: true
  ansible.builtin.command:
    "semanage permissive -a httpd_t"
  changed_when: false

# Ставим nginx
- name: "Install nginx"
  ansible.builtin.include_role:
    name: install_nginx
  vars:
    install_nginx_state: stopped
    install_nginx_enabled: true
    install_nginx_ver: "{{ install_app_nginx_ver }}"

# У php каталог с сессиями заточен на апач и слетает на него же
# при каждом обновлении. Проще добавить nginx в группу апача
- name: "Add nginx to 'apache' group (for PHP compatibility)"
  become: true
  ansible.builtin.user:
    name: "nginx"
    append: true
    groups: "apache"

# Проверяем - надо ли генерировать ключ Диффи-Хеллмана?
# Их генерация - штука долгая
- name: "Check if Diffie-Hellman key already exists"
  become: true
  ansible.builtin.stat:
    path: "/etc/ssl/certs/dhparam.pem"
  register: dh_key_done
    
# Таки надо генерить... Сходите за кофе
- name: "Generate Diffie-Hellman key"  # Ключи генерирует долго - минуты 2
  become: true                         # А если поставить 4096 бит, то и
  ansible.builtin.command:             # 20 минут - не предел.
    cmd: "openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048"
  when: not dh_key_done.stat.exists

# Открываем в фаерволе доступ по HTTPS
- name: "Enable HTTPS in firewall"
  become: true
  ansible.posix.firewalld:
    zone: "home"
    service: "https"
    state: "enabled"
    permanent: true
    immediate: true

# Устанавливаем Wordpress
- name: "Install Wordpress"
  ansible.builtin.include_role:
    name: install_wordpress
  vars:
    install_wordpress_site_name: "{{ install_app_my_domain_tld }}"
    install_wordpress_db_host: "{{ install_app_db_host }}"
    install_wordpress_db_name: "{{ install_app_db_name }}"
    install_wordpress_db_user: "{{ install_app_db_user }}"
    install_wordpress_db_pass: "{{ install_app_db_pass }}"
    install_wordpress_dir: "{{ install_app_web_dir }}/{{ install_wordpress_site_name }}"
    install_wordpress_ver: "{{ install_app_wordpress_ver }}"

# Создаём каталог для лога
- name: "Create nginx log directory"
  become: true
  ansible.builtin.file:
    path: "/var/log/nginx/{{ install_app_my_domain_tld }}"
    state: directory
    owner: "root"
    group: "root"
    mode: "0755"

# Создаём конфиг для nginx'а
- name: "Create nginx config"
  become: true
  ansible.builtin.template:
    src: "templates/site.conf.j2"
    dest: "/etc/nginx/conf.d/{{ install_app_my_domain_tld }}.conf"
    owner: "root"
    group: "root"
    mode: "0644"
  notify: "Reload nginx service"

# На всякий случай, дёргаем перезагрузку
# конфигурации nginx'а
- name: "Flush handlers"
  ansible.builtin.meta:
    flush_handlers
