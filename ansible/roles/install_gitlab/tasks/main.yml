---
# Ставим необходимые для GitLab'а зависимости
- name: "Install GitLab dependencies"
  become: true
  ansible.builtin.dnf:
    name:
      - curl
      - policycoreutils
      - perl
    state: "present"

# Даём в фаерволе доступ по HTTPS
- name: "Allow HTTPS in firewall for local network (zone 'home')"
  become: true
  ansible.posix.firewalld:
    zone: "home"
    service: "https"
    state: "enabled"
    immediate: true
    permanent: true

# Ставим, если необходимо, postfix
# Он нужен для отправки писем, если нет других почтовиков.
- name: "Install Postfix"
  become: true
  ansible.builtin.dnf:
    name: "postfix"
    state: "present"
  notify: "Start Postfix"
  when: install_gitlab_postfix_install

# Запускаем постфикс, пока не забыли
- name: "Flush handlers"
  ansible.builtin.meta:
    flush_handlers

# Мерзкое ЯОблако рвёт соединения при скачке более
# гигабайта за раз. Будем качать частями при помощи
# спец. скрипта.

# Качаем скрипт
- name: "Copy GitLab rpm downloader"
  become: true
  ansible.builtin.template:
    src: "templates/gl_download.sh.j2"
    dest: "/opt/gl_download.sh"
    owner: "root"
    group: "root"
    mode: "0755"

# Проверяем - а надо ли нам вообще что-то качать?
- name: "Check if GitLab rpm already exists"
  ansible.builtin.stat:
    path: "/opt/gitlab-ee-15.1.0-ee.0.el8.x86_64.rpm"
  register: rpm_exists

# Запускаем скрипт, если rpm ещё не скачен
- name: "Run GitLab rpm downloader"
  become: true
  ansible.builtin.command:
    cmd: "/opt/gl_download.sh"
  when: not rpm_exists.stat.exists

# Ставим сам GitLab (пока без настроек)
- name: "Install GitLab"
  become: true
  ansible.builtin.dnf:
    name: "/opt/gitlab-ee-15.1.0-ee.0.el8.x86_64.rpm"
    state: "present"
    disable_gpg_check: true
  notify: "Reconfigure GitLab"

# Копируем настройки (имя сайта, пароль root, e.t.c.)
- name: "Copy GitLab settings"
  become: true
  ansible.builtin.template:
    backup: true
    src: "templates/gitlab.rb.j2"
    dest: "/etc/gitlab/gitlab.rb"
    owner: "root"
    group: "root"
    mode: "0644"

# Открываем порты в фаерволе для мониторинга
# Много их и не факт, что все нужны
- name: "Allow monitoring access"
  block:
    - name: "Allow 8082/tcp (sidekiq)"
      ansible.posix.firewalld:
        zone: "home"
        port: "8082/tcp"
        state: enabled
        persistent: true
        immediate: true

    - name: "Allow 9090/tcp (node exporter)"
      ansible.posix.firewalld:
        zone: "home"
        port: "9090/tcp"
        state: enabled
        persistent: true
        immediate: true

    - name: "Allow 9094/tcp (alert manager)"
      ansible.posix.firewalld:
        zone: "home"
        port: "9094/tcp"
        state: enabled
        persistent: true
        immediate: true

    - name: "Allow 9100/tcp (???)"
      ansible.posix.firewalld:
        zone: "home"
        port: "9100/tcp"
        state: enabled
        persistent: true
        immediate: true

    - name: "Allow 9121/tcp (redis)"
      ansible.posix.firewalld:
        zone: "home"
        port: "9121/tcp"
        state: enabled
        persistent: true
        immediate: true

    - name: "Allow 9168/tcp (gitlab exporter)"
      ansible.posix.firewalld:
        zone: "home"
        port: "9168/tcp"
        state: enabled
        persistent: true
        immediate: true

    - name: "Allow 9187/tcp (postgresql)"
      ansible.posix.firewalld:
        zone: "home"
        port: "9187/tcp"
        state: enabled
        persistent: true
        immediate: true

    - name: "Allow 9229/tcp (workhorse)"
      ansible.posix.firewalld:
        zone: "home"
        port: "9229/tcp"
        state: enabled
        persistent: true
        immediate: true

    - name: "Allow 9236/tcp (gitaly)"
      ansible.posix.firewalld:
        zone: "home"
        port: "9187/tcp"
        state: enabled
        persistent: true
        immediate: true

  when: install_gitlab_monitoring_srv != ""
  become: true

# Запускаем первичную конфигурацию GitLab'а
- name: "Reconfigure starting..."
  ansible.builtin.debug:
    msg: "Reconfigure starting..."

- name: "Reconfigure Gitlab"
  become: true
  ansible.builtin.command:
    cmd: "sudo gitlab-ctl reconfigure"
  changed_when: false
